# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: websockets.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass
class Frame(betterproto.Message):
    seqid: int = betterproto.uint64_field(1)
    logid: int = betterproto.uint64_field(2)
    service: int = betterproto.int32_field(3)
    method: int = betterproto.int32_field(4)
    headers: List["Frame"] = betterproto.message_field(5)
    payload_encoding: str = betterproto.string_field(6)
    payload_type: str = betterproto.string_field(7)
    payload: bytes = betterproto.bytes_field(8)


@dataclass
class PropertyItem(betterproto.Message):
    uid: int = betterproto.int64_field(1)
    sec_uid: str = betterproto.string_field(2)
    create_time: int = betterproto.int64_field(3)
    idempotent_id: str = betterproto.string_field(4)
    value: str = betterproto.string_field(5)


@dataclass
class PropertyItemList(betterproto.Message):
    pass


@dataclass
class MessageBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    server_message_id: int = betterproto.int64_field(3)
    index_in_conversation: int = betterproto.int64_field(4)
    conversation_short_id: int = betterproto.int64_field(5)
    message_type: int = betterproto.int32_field(6)
    sender: int = betterproto.int64_field(7)
    content: str = betterproto.string_field(8)


@dataclass
class ReferenceInfo(betterproto.Message):
    referenced_message_id: int = betterproto.int64_field(1)
    hint: str = betterproto.string_field(2)
    ref_message_type: int = betterproto.int64_field(3)
    referenced_message_status: int = betterproto.int32_field(4)
    root_message_id: int = betterproto.int64_field(5)
    root_message_conv_index: int = betterproto.int64_field(6)


@dataclass
class Participant(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    sort_order: int = betterproto.int64_field(2)
    role: int = betterproto.int32_field(3)
    alias: str = betterproto.string_field(4)
    sec_uid: str = betterproto.string_field(5)
    blocked: int = betterproto.int32_field(6)
    left_block_time: int = betterproto.int64_field(7)


@dataclass
class ParticipantsPage(betterproto.Message):
    participants: List["Participant"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    cursor: int = betterproto.int64_field(3)


@dataclass
class ConversationInfoV2(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    ticket: str = betterproto.string_field(4)
    first_page_participants: "ParticipantsPage" = betterproto.message_field(6)
    participants_count: int = betterproto.int32_field(7)
    is_participant: bool = betterproto.bool_field(8)
    inbox_type: int = betterproto.int32_field(9)
    user_info: "Participant" = betterproto.message_field(20)
    conversation_core_info: "ConversationCoreInfo" = betterproto.message_field(50)
    conversation_setting_info: "ConversationSettingInfo" = betterproto.message_field(51)


@dataclass
class ConversationCoreInfo(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    info_version: int = betterproto.int64_field(4)
    name: str = betterproto.string_field(5)
    desc: str = betterproto.string_field(6)
    icon: str = betterproto.string_field(7)
    inbox_type: int = betterproto.int32_field(8)
    notice: str = betterproto.string_field(9)


@dataclass
class ConversationSettingInfo(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    min_index: int = betterproto.int64_field(4)
    read_index: int = betterproto.int64_field(5)
    mute: int = betterproto.int32_field(6)
    stick_on_top: int = betterproto.int32_field(7)
    inbox_type: int = betterproto.int32_field(8)


@dataclass
class MessagesPerUserRequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    limit: int = betterproto.int32_field(2)


@dataclass
class MessagesPerUserResponseBody(betterproto.Message):
    messages: List["MessageBody"] = betterproto.message_field(1)
    next_cursor: int = betterproto.int64_field(2)
    has_more: bool = betterproto.bool_field(3)


@dataclass
class MessagesPerUserInitV2RequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    new_user: int = betterproto.int32_field(2)
    init_sub_type: int = betterproto.int32_field(3)


@dataclass
class MessagesPerUserInitV2ResponseBody(betterproto.Message):
    messages: List["MessageBody"] = betterproto.message_field(1)
    conversations: List["ConversationInfoV2"] = betterproto.message_field(2)
    per_user_cursor: int = betterproto.int64_field(3)
    next_cursor: int = betterproto.int64_field(4)
    has_more: bool = betterproto.bool_field(5)


@dataclass
class MessagesInConversationRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    direction: int = betterproto.int32_field(4)
    anchor_index: int = betterproto.int64_field(5)
    limit: int = betterproto.int32_field(6)


@dataclass
class MessagesInConversationResponseBody(betterproto.Message):
    messages: List["MessageBody"] = betterproto.message_field(1)
    next_cursor: int = betterproto.int64_field(2)
    has_more: bool = betterproto.bool_field(3)


@dataclass
class CreateConversationV2RequestBody(betterproto.Message):
    conversation_type: int = betterproto.int32_field(1)
    participants: List[int] = betterproto.int64_field(2)
    persistent: bool = betterproto.bool_field(3)
    idempotent_id: str = betterproto.string_field(4)
    name: str = betterproto.string_field(6)
    avatar_url: str = betterproto.string_field(7)
    description: str = betterproto.string_field(8)


@dataclass
class CreateConversationV2ResponseBody(betterproto.Message):
    check_code: int = betterproto.int64_field(2)
    check_message: str = betterproto.string_field(3)
    extra_info: str = betterproto.string_field(4)
    status: int = betterproto.int32_field(5)


@dataclass
class SendUserActionRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    action_type: int = betterproto.int32_field(4)


@dataclass
class SendInputStatusRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    status: int = betterproto.int32_field(4)


@dataclass
class DeleteConversationRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    last_message_index: int = betterproto.int64_field(4)


@dataclass
class DissolveConversationRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class DeleteMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    message_id: int = betterproto.int64_field(4)


@dataclass
class MarkConversationReadRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    read_message_index: int = betterproto.int64_field(4)
    conv_unread_count: int = betterproto.int64_field(5)
    total_unread_count: int = betterproto.int64_field(6)


@dataclass
class GetConversationParticipantsReadIndexV3RequestBody(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_id: str = betterproto.string_field(3)


@dataclass
class GetConversationParticipantsReadIndexV3ResponseBody(betterproto.Message):
    pass


@dataclass
class ParticipantReadIndex(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    sec_uid: str = betterproto.string_field(2)
    index: int = betterproto.int64_field(3)


@dataclass
class GetConversationParticipantsMinIndexV3RequestBody(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_id: str = betterproto.string_field(3)


@dataclass
class GetConversationParticipantsMinIndexV3ResponseBody(betterproto.Message):
    pass


@dataclass
class ParticipantMinIndex(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    sec_uid: str = betterproto.string_field(2)
    index: int = betterproto.int64_field(3)


@dataclass
class SendMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    content: str = betterproto.string_field(4)


@dataclass
class ReferencedMessageInfo(betterproto.Message):
    referenced_message_id: int = betterproto.int64_field(1)
    hint: str = betterproto.string_field(2)
    root_message_id: int = betterproto.int64_field(3)
    root_message_conv_index: int = betterproto.int64_field(4)


@dataclass
class SendMessageResponseBody(betterproto.Message):
    server_message_id: int = betterproto.int64_field(1)
    extra_info: str = betterproto.string_field(2)
    status: int = betterproto.int32_field(3)
    client_message_id: str = betterproto.string_field(4)
    check_code: int = betterproto.int64_field(5)
    check_message: str = betterproto.string_field(6)


@dataclass
class NewMessageNotify(betterproto.Message):
    conversation_id: str = betterproto.string_field(2)
    conversation_type: int = betterproto.int32_field(3)
    notify_type: int = betterproto.int32_field(4)
    message: "MessageBody" = betterproto.message_field(5)
    previous_cursor: int = betterproto.int64_field(6)
    next_cursor: int = betterproto.int64_field(7)
    index_in_conversation: int = betterproto.int64_field(8)
    ref_msg_info: "ReferenceInfo" = betterproto.message_field(15)


@dataclass
class ConversationsPerUserByFavoriteV2RequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    limit: int = betterproto.int32_field(2)


@dataclass
class ConversationsPerUserByTopV2RequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    limit: int = betterproto.int32_field(2)


@dataclass
class GetConversationInfoV2RequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class GetConversationInfoListV2RequestBody(betterproto.Message):
    pass


@dataclass
class GetConversationInfoListV2ResponseBody(betterproto.Message):
    pass


@dataclass
class GetConversationInfoListByFavoriteV2ResponseBody(betterproto.Message):
    conversation_info_list: List["ConversationInfoV2"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class GetConversationInfoListByTopV2ResponseBody(betterproto.Message):
    conversation_info_list: List["ConversationInfoV2"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class RecallMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    server_message_id: int = betterproto.int64_field(4)


@dataclass
class ConversationAddParticipantsRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    participants: List[int] = betterproto.int64_field(4)


@dataclass
class SecUidPair(betterproto.Message):
    uid: int = betterproto.int64_field(1)
    sec_uid: str = betterproto.string_field(2)


@dataclass
class ConversationAddParticipantsResponseBody(betterproto.Message):
    success_participants: List[int] = betterproto.int64_field(1)
    failed_participants: List[int] = betterproto.int64_field(2)
    status: int = betterproto.int32_field(3)
    extra_info: str = betterproto.string_field(4)
    check_code: int = betterproto.int64_field(5)
    check_message: str = betterproto.string_field(6)
    sec_success_participants: List["SecUidPair"] = betterproto.message_field(7)
    sec_failed_participants: List["SecUidPair"] = betterproto.message_field(8)


@dataclass
class ConversationRemoveParticipantsRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    participants: List[int] = betterproto.int64_field(4)


@dataclass
class ConversationRemoveParticipantsResponseBody(betterproto.Message):
    failed_participants: List[int] = betterproto.int64_field(1)
    status: int = betterproto.int32_field(2)
    extra_info: str = betterproto.string_field(3)
    check_code: int = betterproto.int64_field(4)
    check_message: str = betterproto.string_field(5)
    failed_sec_participants: List["SecUidPair"] = betterproto.message_field(6)


@dataclass
class ConversationLeaveRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class ConversationParticipantsListRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    cursor: int = betterproto.int64_field(4)
    limit: int = betterproto.int32_field(5)


@dataclass
class ConversationParticipantsListResponseBody(betterproto.Message):
    pass


@dataclass
class UpdateConversationParticipantRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    user_id: int = betterproto.int64_field(4)
    role: int = betterproto.int32_field(5)
    alias: str = betterproto.string_field(6)
    is_alias_set: bool = betterproto.bool_field(7)


@dataclass
class UpdateConversationParticipantResponseBody(betterproto.Message):
    participant: "Participant" = betterproto.message_field(1)
    status: int = betterproto.int32_field(2)
    extra_info: str = betterproto.string_field(3)
    check_code: int = betterproto.int64_field(4)
    check_message: str = betterproto.string_field(5)


@dataclass
class GetConversationCoreInfoRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class GetConversationCoreInfoResponseBody(betterproto.Message):
    pass


@dataclass
class SetConversationCoreInfoRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    name: str = betterproto.string_field(4)
    desc: str = betterproto.string_field(5)
    icon: str = betterproto.string_field(6)
    notice: str = betterproto.string_field(7)
    is_name_set: bool = betterproto.bool_field(8)
    is_desc_set: bool = betterproto.bool_field(9)
    is_icon_set: bool = betterproto.bool_field(10)
    is_notice_set: bool = betterproto.bool_field(11)


@dataclass
class SetConversationCoreInfoResponseBody(betterproto.Message):
    conversation_core_info: "ConversationCoreInfo" = betterproto.message_field(1)
    status: int = betterproto.int32_field(2)
    extra_info: str = betterproto.string_field(3)
    check_code: int = betterproto.int64_field(4)
    check_message: str = betterproto.string_field(5)


@dataclass
class UpsertConversationCoreExtInfoRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class UpsertConversationCoreExtInfoResponseBody(betterproto.Message):
    core_info: "ConversationCoreInfo" = betterproto.message_field(1)
    status: int = betterproto.int32_field(2)
    check_code: int = betterproto.int64_field(3)
    check_message: str = betterproto.string_field(4)
    extra_info: str = betterproto.string_field(5)


@dataclass
class SetConversationSettingInfoRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    set_stick_on_top: bool = betterproto.bool_field(4)
    set_mute: bool = betterproto.bool_field(5)
    set_favorite: bool = betterproto.bool_field(6)


@dataclass
class SetConversationSettingInfoResponseBody(betterproto.Message):
    setting_info: "ConversationSettingInfo" = betterproto.message_field(1)
    status: int = betterproto.int32_field(2)
    check_code: int = betterproto.int64_field(3)
    check_message: str = betterproto.string_field(4)
    extra_info: str = betterproto.string_field(5)


@dataclass
class UpsertConversationSettingExtInfoRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class UpsertConversationSettingExtInfoResponseBody(betterproto.Message):
    setting_info: "ConversationSettingInfo" = betterproto.message_field(1)
    status: int = betterproto.int32_field(2)
    check_code: int = betterproto.int64_field(3)
    check_message: str = betterproto.string_field(4)
    extra_info: str = betterproto.string_field(5)


@dataclass
class StrangerConversation(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    unread: int = betterproto.int32_field(2)
    last_message: "MessageBody" = betterproto.message_field(3)
    conversation_id: str = betterproto.string_field(4)
    participants: List["Participant"] = betterproto.message_field(5)


@dataclass
class GetStrangerConversationListRequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    count: int = betterproto.int64_field(2)
    show_total_unread: bool = betterproto.bool_field(3)


@dataclass
class GetStrangerConversationListResponseBody(betterproto.Message):
    next_cursor: int = betterproto.int64_field(1)
    has_more: bool = betterproto.bool_field(2)
    total_unread: int = betterproto.int32_field(3)
    conversation_list: List["StrangerConversation"] = betterproto.message_field(4)


@dataclass
class GetStrangerMessagesRequestBody(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    reset_unread_count: bool = betterproto.bool_field(2)


@dataclass
class GetStrangerMessagesResponseBody(betterproto.Message):
    pass


@dataclass
class DeleteStrangerMessageRequestBody(betterproto.Message):
    server_message_id: int = betterproto.int64_field(1)
    conversation_short_id: int = betterproto.int64_field(2)


@dataclass
class DeleteStrangerConversationRequestBody(betterproto.Message):
    pass


@dataclass
class DeleteStrangerAllConversationRequestBody(betterproto.Message):
    pass


@dataclass
class MarkStrangerConversationReadRequestBody(betterproto.Message):
    pass


@dataclass
class MarkStrangerAllConversationReadRequestBody(betterproto.Message):
    pass


@dataclass
class ModifyPropertyContent(betterproto.Message):
    operation: int = betterproto.int32_field(1)
    key: str = betterproto.string_field(2)
    value: str = betterproto.string_field(3)
    idempotent_id: str = betterproto.string_field(4)


@dataclass
class ModifyPropertyBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    server_message_id: int = betterproto.int64_field(4)
    client_message_id: str = betterproto.string_field(5)
    modify_property_content: List["ModifyPropertyContent"] = betterproto.message_field(
        6
    )


@dataclass
class ModifyMessagePropertyRequestBody(betterproto.Message):
    property_list: "ModifyPropertyBody" = betterproto.message_field(1)
    ticket: str = betterproto.string_field(2)


@dataclass
class ModifyMessagePropertyResponseBody(betterproto.Message):
    status: int = betterproto.int32_field(1)
    version: int = betterproto.int64_field(2)


@dataclass
class GetUploadTokenRequestBody(betterproto.Message):
    vsdk_version: str = betterproto.string_field(1)
    token_type: int = betterproto.int32_field(2)


@dataclass
class GetUploadTokenResponseBody(betterproto.Message):
    access_key: str = betterproto.string_field(1)
    hosts: List[str] = betterproto.string_field(2)
    token: str = betterproto.string_field(3)
    token_type: int = betterproto.int32_field(4)


@dataclass
class ImgOption(betterproto.Message):
    tplv: str = betterproto.string_field(1)
    params: List[str] = betterproto.string_field(2)
    format: str = betterproto.string_field(3)
    urls: List[str] = betterproto.string_field(100)


@dataclass
class VideoOption(betterproto.Message):
    vid: str = betterproto.string_field(1)
    cover_uri: str = betterproto.string_field(2)
    urls: List[str] = betterproto.string_field(100)
    cover_urls: List[str] = betterproto.string_field(101)


@dataclass
class AudioOption(betterproto.Message):
    vid: str = betterproto.string_field(1)
    urls: List[str] = betterproto.string_field(100)


@dataclass
class FileOption(betterproto.Message):
    pass


@dataclass
class GetMediaUrlsRequestBody(betterproto.Message):
    source_appid: int = betterproto.int32_field(1)
    uri: str = betterproto.string_field(2)
    media_type: int = betterproto.int32_field(3)
    encrypted: bool = betterproto.bool_field(4)
    img_options: List["ImgOption"] = betterproto.message_field(5)
    video_options: List["VideoOption"] = betterproto.message_field(6)
    audio_options: List["AudioOption"] = betterproto.message_field(7)
    file_options: List["FileOption"] = betterproto.message_field(8)
    encrypted_uri: str = betterproto.string_field(9)
    read_url_from: int = betterproto.int32_field(10)


@dataclass
class GetMediaUrlsResponseBody(betterproto.Message):
    uri: str = betterproto.string_field(1)
    media_type: int = betterproto.int32_field(2)
    img_options: List["ImgOption"] = betterproto.message_field(3)
    video_options: List["VideoOption"] = betterproto.message_field(4)
    audio_options: List["AudioOption"] = betterproto.message_field(5)
    file_options: List["FileOption"] = betterproto.message_field(6)
    encrypted_urls: List[str] = betterproto.string_field(7)


@dataclass
class GetTicketRequestBody(betterproto.Message):
    ticket_type: int = betterproto.int32_field(1)
    conversation_type: int = betterproto.int32_field(2)
    to_id: int = betterproto.int64_field(4)
    conversation_short_id: int = betterproto.int64_field(5)


@dataclass
class GetTicketResponseBody(betterproto.Message):
    pass


@dataclass
class GetUserConversationListRequestBody(betterproto.Message):
    sort_type: int = betterproto.int32_field(1)
    cursor: int = betterproto.int64_field(2)
    con_type: int = betterproto.int32_field(3)
    limit: int = betterproto.int64_field(4)
    include_role: int = betterproto.int32_field(5)
    exclude_role: int = betterproto.int32_field(6)
    with_cold: bool = betterproto.bool_field(8)


@dataclass
class GetUserConversationListResponseBody(betterproto.Message):
    list: List["ConversationInfoV2"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class ModifyMessageExtRequestBody(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    message_id: int = betterproto.int64_field(2)
    ticket: str = betterproto.string_field(3)


@dataclass
class RequestBody(betterproto.Message):
    send_message_body: "SendMessageRequestBody" = betterproto.message_field(100)
    messages_per_user_body: "MessagesPerUserRequestBody" = betterproto.message_field(
        200
    )
    get_message_by_id_body: "GetMessageByIdRequestBody" = betterproto.message_field(211)
    messages_in_conversation_body: "MessagesInConversationRequestBody" = (
        betterproto.message_field(301)
    )
    get_messages_checkinfo_in_conversation_body: "GetMessagesCheckInfoInConversationRequestBody" = betterproto.message_field(
        302
    )
    send_user_action_body: "SendUserActionRequestBody" = betterproto.message_field(410)
    send_input_status_body: "SendInputStatusRequestBody" = betterproto.message_field(
        411
    )
    delete_conversation_body: "DeleteConversationRequestBody" = (
        betterproto.message_field(603)
    )
    mark_conversation_read_body: "MarkConversationReadRequestBody" = (
        betterproto.message_field(604)
    )
    conversation_participants_body: "ConversationParticipantsListRequestBody" = (
        betterproto.message_field(605)
    )
    dissolve_conversation_body: "DissolveConversationRequestBody" = (
        betterproto.message_field(614)
    )
    conversation_add_participants_body: "ConversationAddParticipantsRequestBody" = (
        betterproto.message_field(650)
    )
    conversation_remove_participants_body: "ConversationRemoveParticipantsRequestBody" = betterproto.message_field(
        651
    )
    leave_conversation_body: "ConversationLeaveRequestBody" = betterproto.message_field(
        652
    )
    update_conversation_participant_body: "UpdateConversationParticipantRequestBody" = (
        betterproto.message_field(655)
    )
    delete_message_body: "DeleteMessageRequestBody" = betterproto.message_field(701)
    recall_message_body: "RecallMessageRequestBody" = betterproto.message_field(702)
    modify_message_property_body: "ModifyMessagePropertyRequestBody" = (
        betterproto.message_field(705)
    )
    get_conversation_core_info_body: "GetConversationCoreInfoRequestBody" = (
        betterproto.message_field(901)
    )
    set_conversation_core_info_body: "SetConversationCoreInfoRequestBody" = (
        betterproto.message_field(902)
    )
    upsert_conversation_core_ext_info_body: "UpsertConversationCoreExtInfoRequestBody" = betterproto.message_field(
        904
    )
    set_conversation_setting_info_body: "SetConversationSettingInfoRequestBody" = (
        betterproto.message_field(921)
    )
    upsert_conversation_setting_ext_info_body: "UpsertConversationSettingExtInfoRequestBody" = betterproto.message_field(
        922
    )
    get_stranger_messages_body: "GetStrangerMessagesRequestBody" = (
        betterproto.message_field(1001)
    )
    delete_stranger_message_body: "DeleteStrangerMessageRequestBody" = (
        betterproto.message_field(1002)
    )
    delete_stranger_conversation_body: "DeleteStrangerConversationRequestBody" = (
        betterproto.message_field(1003)
    )
    delete_stranger_all_conversation_body: "DeleteStrangerAllConversationRequestBody" = betterproto.message_field(
        1004
    )
    mark_stranger_conversation_read_body: "MarkStrangerConversationReadRequestBody" = (
        betterproto.message_field(1005)
    )
    mark_stranger_all_conversation_read_body: "MarkStrangerAllConversationReadRequestBody" = betterproto.message_field(
        1006
    )
    get_upload_token_body: "GetUploadTokenRequestBody" = betterproto.message_field(2003)
    get_media_urls_body: "GetMediaUrlsRequestBody" = betterproto.message_field(2004)
    get_ticket_body: "GetTicketRequestBody" = betterproto.message_field(2005)
    get_conversation_list_body: "GetUserConversationListRequestBody" = (
        betterproto.message_field(2006)
    )
    broadcast_send_message_body: "BroadcastSendMessageRequestBody" = (
        betterproto.message_field(2007)
    )
    broadcast_recv_message_body: "BroadcastRecvMessageRequestBody" = (
        betterproto.message_field(2008)
    )
    broadcast_user_counter_body: "BroadcastUserCounterRequestBody" = (
        betterproto.message_field(2009)
    )
    client_ack_body: "ClientACKRequestBody" = betterproto.message_field(2010)
    create_voip_body: "CreateVoipRequestBody" = betterproto.message_field(2011)
    call_voip_body: "CallVoipRequestBody" = betterproto.message_field(2012)
    update_voip_body: "UpdateVoipRequestBody" = betterproto.message_field(2013)
    channel_heartbeat_body: "ChannelHeartBeatRequestBody" = betterproto.message_field(
        2014
    )
    profile_get_info: "ProfileGetInfoRequestBody" = betterproto.message_field(2015)
    report_client_metrics_body: "ReportClientMetricsRequestBody" = (
        betterproto.message_field(2016)
    )
    get_configs_body: "GetConfigsRequestBody" = betterproto.message_field(2017)
    modify_message_ext_body: "ModifyMessageExtRequestBody" = betterproto.message_field(
        2021
    )
    unread_count_report_body: "UnReadCountReportRequestBody" = (
        betterproto.message_field(2018)
    )
    block_members_body: "BlockMembersRequestBody" = betterproto.message_field(2019)
    block_conversation_body: "BlockConversationRequestBody" = betterproto.message_field(
        2020
    )
    get_unread_count_body: "GetUnreadCountRequestBody" = betterproto.message_field(2030)
    get_blocklist_body: "GetBlockListRequestBody" = betterproto.message_field(2032)
    set_blocklist_body: "SetBlocklistRequestBody" = betterproto.message_field(2033)
    check_in_blocklist_body: "CheckInBlockListRequestBody" = betterproto.message_field(
        2034
    )
    mark_message_body: "MarkMessageRequestBody" = betterproto.message_field(2036)
    pull_mark_message_body: "PullMarkMessageRequestBody" = betterproto.message_field(
        2037
    )
    mark_msg_unread_count_report: "MarkMsgUnreadCountReportRequestBody" = (
        betterproto.message_field(2054)
    )
    mark_msg_get_unread_count: "MarkMsgGetUnreadCountRequestBody" = (
        betterproto.message_field(2055)
    )
    batch_unmark_message: "BatchUnmarkMessageRequestBody" = betterproto.message_field(
        2056
    )


@dataclass
class Headers(betterproto.Message):
    pass


@dataclass
class Request(betterproto.Message):
    cmd: int = betterproto.int32_field(1)
    sequence_id: int = betterproto.int64_field(2)
    sdk_version: str = betterproto.string_field(3)
    token: str = betterproto.string_field(4)
    refer: int = betterproto.int32_field(5)
    inbox_type: int = betterproto.int32_field(6)
    build_number: str = betterproto.string_field(7)
    body: "RequestBody" = betterproto.message_field(8)
    device_id: str = betterproto.string_field(9)
    channel: str = betterproto.string_field(10)
    device_platform: str = betterproto.string_field(11)
    device_type: str = betterproto.string_field(12)
    os_version: str = betterproto.string_field(13)
    version_code: str = betterproto.string_field(14)
    headers: "Headers" = betterproto.message_field(15)
    config_id: int = betterproto.int32_field(16)
    token_info: "TokenInfo" = betterproto.message_field(17)
    auth_type: int = betterproto.int32_field(18)


@dataclass
class TokenInfo(betterproto.Message):
    mark_id: int = betterproto.int32_field(1)
    type: int = betterproto.int32_field(2)
    app_id: int = betterproto.int32_field(3)
    user_id: int = betterproto.int64_field(4)
    timestamp: int = betterproto.int64_field(5)


@dataclass
class NewP2PMessageNotify(betterproto.Message):
    send_type: int = betterproto.int32_field(1)
    sender: int = betterproto.int64_field(2)
    sec_sender: str = betterproto.string_field(3)
    conversation_id: str = betterproto.string_field(4)
    conversation_short_id: int = betterproto.int64_field(5)
    conversation_type: int = betterproto.int32_field(6)
    message_type: int = betterproto.int32_field(7)
    content: str = betterproto.string_field(8)


@dataclass
class MessageInfo(betterproto.Message):
    status: int = betterproto.int32_field(1)
    body: "MessageBody" = betterproto.message_field(2)


@dataclass
class GetMessageByIdRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    server_message_id: int = betterproto.int64_field(4)


@dataclass
class GetMessageByIdResponseBody(betterproto.Message):
    pass


@dataclass
class ResponseBody(betterproto.Message):
    send_message_body: "SendMessageResponseBody" = betterproto.message_field(100)
    messages_per_user_body: "MessagesPerUserResponseBody" = betterproto.message_field(
        200
    )
    get_message_by_id_body: "GetMessageByIdResponseBody" = betterproto.message_field(
        211
    )
    messages_in_conversation_body: "MessagesInConversationResponseBody" = (
        betterproto.message_field(301)
    )
    get_messages_checkinfo_in_conversation_body: "GetMessagesCheckInfoInConversationResponseBody" = betterproto.message_field(
        302
    )
    has_new_message_notify: "NewMessageNotify" = betterproto.message_field(500)
    get_conversations_checkinfo_body: "GetConversationsCheckInfoResponseBody" = (
        betterproto.message_field(615)
    )
    conversation_participants_body: "ConversationParticipantsListResponseBody" = (
        betterproto.message_field(605)
    )
    conversation_add_participants_body: "ConversationAddParticipantsResponseBody" = (
        betterproto.message_field(650)
    )
    conversation_remove_participants_body: "ConversationRemoveParticipantsResponseBody" = betterproto.message_field(
        651
    )
    update_conversation_participant_body: "UpdateConversationParticipantResponseBody" = betterproto.message_field(
        655
    )
    modify_message_property_body: "ModifyMessagePropertyResponseBody" = (
        betterproto.message_field(705)
    )
    get_conversation_core_info_body: "GetConversationCoreInfoResponseBody" = (
        betterproto.message_field(901)
    )
    set_conversation_core_info_body: "SetConversationCoreInfoResponseBody" = (
        betterproto.message_field(902)
    )
    upsert_conversation_core_ext_info_body: "UpsertConversationCoreExtInfoResponseBody" = betterproto.message_field(
        904
    )
    set_conversation_setting_info_body: "SetConversationSettingInfoResponseBody" = (
        betterproto.message_field(921)
    )
    upsert_conversation_setting_ext_info_body: "UpsertConversationSettingExtInfoResponseBody" = betterproto.message_field(
        922
    )
    get_stranger_messages_body: "GetStrangerMessagesResponseBody" = (
        betterproto.message_field(1001)
    )
    get_upload_token_body: "GetUploadTokenResponseBody" = betterproto.message_field(
        2003
    )
    get_media_urls_body: "GetMediaUrlsResponseBody" = betterproto.message_field(2004)
    get_ticket_body: "GetTicketResponseBody" = betterproto.message_field(2005)
    get_conversation_list_body: "GetUserConversationListResponseBody" = (
        betterproto.message_field(2006)
    )
    broadcast_send_message_body: "BroadcastSendMessageResponseBody" = (
        betterproto.message_field(2007)
    )
    broadcast_recv_message_body: "BroadcastRecvMessageResponseBody" = (
        betterproto.message_field(2008)
    )
    broadcast_user_counter_body: "BroadcastUserCounterResponseBody" = (
        betterproto.message_field(2009)
    )
    create_voip_body: "CreateVoipResponseBody" = betterproto.message_field(2011)
    call_voip_body: "CallVoipResponseBody" = betterproto.message_field(2012)
    update_voip_body: "UpdateVoipResponseBody" = betterproto.message_field(2013)
    profile_get_info: "ProfileGetInfoResponseBody" = betterproto.message_field(2015)
    get_configs_body: "GetConfigsResponseBody" = betterproto.message_field(2017)
    unread_count_report_body: "UnReadCountReportResponseBody" = (
        betterproto.message_field(2018)
    )
    block_members_body: "BlockMembersResponseBody" = betterproto.message_field(2019)
    get_unread_count_body: "GetUnreadCountResponseBody" = betterproto.message_field(
        2030
    )
    get_blocklist_body: "GetBlockListResponseBody" = betterproto.message_field(2032)
    set_blocklist_body: "SetBlocklistResponseBody" = betterproto.message_field(2033)
    check_in_blocklist_body: "CheckInBlockListResponseBody" = betterproto.message_field(
        2034
    )
    mark_message_body: "MarkMessageResponseBody" = betterproto.message_field(2036)
    pull_mark_message_body: "PullMarkMessageResponseBody" = betterproto.message_field(
        2037
    )
    mark_msg_unread_count_report: "MarkMsgUnreadCountReportResponseBody" = (
        betterproto.message_field(2054)
    )
    mark_msg_get_unread_count: "MarkMsgGetUnreadCountResponseBody" = (
        betterproto.message_field(2055)
    )
    batch_unmark_message: "BatchUnmarkMessageResponseBody" = betterproto.message_field(
        2056
    )


@dataclass
class Response(betterproto.Message):
    cmd: int = betterproto.int32_field(1)
    sequence_id: int = betterproto.int64_field(2)
    status_code: int = betterproto.int32_field(3)
    error_desc: str = betterproto.string_field(4)
    inbox_type: int = betterproto.int32_field(5)
    body: "ResponseBody" = betterproto.message_field(6)
    log_id: str = betterproto.string_field(7)


@dataclass
class BroadcastSendMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    content: str = betterproto.string_field(4)


@dataclass
class BroadcastSendMessageResponseBody(betterproto.Message):
    server_message_id: int = betterproto.int64_field(1)
    extra_info: str = betterproto.string_field(2)
    status: int = betterproto.int32_field(3)
    client_message_id: str = betterproto.string_field(4)
    check_code: int = betterproto.int64_field(5)
    check_message: str = betterproto.string_field(6)


@dataclass
class BroadcastRecvMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    cursor: int = betterproto.int64_field(4)
    limit: int = betterproto.int64_field(5)
    reverse: bool = betterproto.bool_field(6)
    pull_type: int = betterproto.int32_field(7)


@dataclass
class BroadcastRecvMessageResponseBody(betterproto.Message):
    messages: List["MessageBody"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class ConversationRequest(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    conversation_type: int = betterproto.int32_field(2)


@dataclass
class BroadcastUserCounterRequestBody(betterproto.Message):
    pass


@dataclass
class BroadcastUserInfo(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    counter: int = betterproto.int32_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class BroadcastUserCounterResponseBody(betterproto.Message):
    pass


@dataclass
class ClientACKRequestBody(betterproto.Message):
    start_time_stamp: int = betterproto.int64_field(1)
    cmd: int = betterproto.int32_field(2)
    network_type: int = betterproto.int32_field(3)
    logid: str = betterproto.string_field(4)
    client_time_stamp: int = betterproto.int64_field(5)
    server_message_id: int = betterproto.int64_field(6)


@dataclass
class VoipInfo(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    device_id: str = betterproto.string_field(2)
    channel_id: str = betterproto.string_field(3)
    token: str = betterproto.string_field(4)
    status: int = betterproto.int32_field(5)
    caller_id: int = betterproto.int64_field(6)
    created_time_ms: int = betterproto.int64_field(7)
    updated_time_ms: int = betterproto.int64_field(8)
    con_short_id: int = betterproto.int64_field(9)
    v_type: int = betterproto.int32_field(10)
    srv_msg_id: int = betterproto.int64_field(11)


@dataclass
class CreateVoipRequestBody(betterproto.Message):
    idempotent_id: str = betterproto.string_field(1)
    v_type: int = betterproto.int32_field(2)
    con_short_id: int = betterproto.int64_field(3)
    srv_msg_id: int = betterproto.int64_field(4)
    ref_channel_id: str = betterproto.string_field(5)
    voip_mode: int = betterproto.int32_field(6)


@dataclass
class CreateVoipResponseBody(betterproto.Message):
    info: "VoipInfo" = betterproto.message_field(1)
    status_code: int = betterproto.int32_field(2)
    voip_mode: int = betterproto.int32_field(3)


@dataclass
class CallVoipRequestBody(betterproto.Message):
    callee_ids: List[int] = betterproto.int64_field(1)
    channel_id: str = betterproto.string_field(2)
    v_type: int = betterproto.int32_field(3)


@dataclass
class CallVoipResponseBody(betterproto.Message):
    info: "VoipInfo" = betterproto.message_field(1)
    callee_ids: List[int] = betterproto.int64_field(2)
    status: int = betterproto.int32_field(3)
    extra_info: str = betterproto.string_field(4)
    check_code: int = betterproto.int64_field(5)
    check_message: str = betterproto.string_field(6)
    ref_channel_id: str = betterproto.string_field(7)
    voip_mode: int = betterproto.int32_field(8)


@dataclass
class UpdateVoipRequestBody(betterproto.Message):
    channel_id: str = betterproto.string_field(1)
    status: int = betterproto.int32_field(2)
    v_type: int = betterproto.int32_field(3)


@dataclass
class UpdateVoipResponseBody(betterproto.Message):
    info: "VoipInfo" = betterproto.message_field(1)
    status_code: int = betterproto.int32_field(2)
    voip_mode: int = betterproto.int32_field(3)
    callees: List[int] = betterproto.int64_field(4)


@dataclass
class ChannelHeartBeatRequestBody(betterproto.Message):
    pass


@dataclass
class Profile(betterproto.Message):
    nick_name: str = betterproto.string_field(1)
    protrait: str = betterproto.string_field(2)
    basic_ext_info: str = betterproto.string_field(3)
    detail_ext_info: str = betterproto.string_field(4)


@dataclass
class ProfileGetInfoRequestBody(betterproto.Message):
    pass


@dataclass
class ProfileGetInfoResponseBody(betterproto.Message):
    pass


@dataclass
class ClientMetric(betterproto.Message):
    metric_type: int = betterproto.int32_field(1)
    k: str = betterproto.string_field(2)
    v: int = betterproto.int64_field(3)


@dataclass
class ReportClientMetricsRequestBody(betterproto.Message):
    pass


@dataclass
class GetConfigsRequestBody(betterproto.Message):
    pass


@dataclass
class GetConfigsResponseBody(betterproto.Message):
    version: int = betterproto.int32_field(1)
    configs: List["Config"] = betterproto.message_field(2)


@dataclass
class Config(betterproto.Message):
    conf_name: str = betterproto.string_field(1)
    conf_value: str = betterproto.string_field(2)


@dataclass
class SendMessageP2PRequestBody(betterproto.Message):
    send_type: int = betterproto.int32_field(1)
    conversation_id: str = betterproto.string_field(2)
    conversation_type: int = betterproto.int32_field(3)
    conversation_short_id: int = betterproto.int64_field(4)
    visible_user: List[int] = betterproto.int64_field(5)
    invisible_user: List[int] = betterproto.int64_field(6)
    message_type: int = betterproto.int32_field(7)
    content: str = betterproto.string_field(8)


@dataclass
class SendMessageP2PResponseBody(betterproto.Message):
    pass


@dataclass
class ConvCountReport(betterproto.Message):
    conv_short_id: int = betterproto.int64_field(1)
    unread_count: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class UnReadCountReportRequestBody(betterproto.Message):
    total_unread_count: int = betterproto.int64_field(1)
    conv_unread_count: List["ConvCountReport"] = betterproto.message_field(2)


@dataclass
class UnReadCountReportResponseBody(betterproto.Message):
    set_total_status: bool = betterproto.bool_field(1)
    failed_conv_list: List[int] = betterproto.int64_field(2)


@dataclass
class GetUnreadCountRequestBody(betterproto.Message):
    get_total: bool = betterproto.bool_field(1)
    conv_short_id: List[int] = betterproto.int64_field(2)


@dataclass
class GetUnreadCountResponseBody(betterproto.Message):
    total_unread_count: int = betterproto.int64_field(1)


@dataclass
class GetBlockListRequestBody(betterproto.Message):
    cursor: int = betterproto.int64_field(1)
    limit: int = betterproto.int32_field(2)


@dataclass
class BlockUserInfo(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    create_time: int = betterproto.int64_field(2)


@dataclass
class GetBlockListResponseBody(betterproto.Message):
    user_info: List["BlockUserInfo"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class SetBlocklistRequestBody(betterproto.Message):
    set_block_list: bool = betterproto.bool_field(1)
    blocklist: List[int] = betterproto.int64_field(2)


@dataclass
class SetBlocklistResponseBody(betterproto.Message):
    pass


@dataclass
class CheckInBlockListRequestBody(betterproto.Message):
    pass


@dataclass
class CheckInBlockListResponseBody(betterproto.Message):
    pass


@dataclass
class BlockMembersRequestBody(betterproto.Message):
    block_status: int = betterproto.int32_field(1)


@dataclass
class BlockMembersResponseBody(betterproto.Message):
    pass


@dataclass
class BlockConversationRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conv_short_id: int = betterproto.int64_field(2)
    conversation_type: int = betterproto.int32_field(3)
    block_status: int = betterproto.int32_field(4)
    block_normal_only: bool = betterproto.bool_field(5)


@dataclass
class GetMessagesCheckInfoInConversationRequestBody(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(2)
    conversation_id: str = betterproto.string_field(5)
    conversation_type: int = betterproto.int32_field(6)
    cursor_reverse_begin: int = betterproto.int64_field(3)
    cursor_reverse_end: int = betterproto.int64_field(7)
    expect_msg_total_count: int = betterproto.int32_field(4)


@dataclass
class MessagesCheckInfo(betterproto.Message):
    head_msg_index: int = betterproto.int64_field(1)
    tail_msg_index: int = betterproto.int64_field(2)
    msg_count: int = betterproto.int32_field(3)
    indexes_checksum: int = betterproto.uint32_field(4)


@dataclass
class GetMessagesCheckInfoInConversationResponseBody(betterproto.Message):
    msgs_checkinfo_list: List["MessagesCheckInfo"] = betterproto.message_field(1)
    real_msg_total_count: int = betterproto.int32_field(2)
    cursor_reverse_next: int = betterproto.int64_field(4)


@dataclass
class ConversationCheckInfo(betterproto.Message):
    conversation_short_id: int = betterproto.int64_field(1)
    conversation_id: str = betterproto.string_field(2)
    conversation_type: int = betterproto.int32_field(3)


@dataclass
class GetConversationsCheckInfoResponseBody(betterproto.Message):
    pass


@dataclass
class MarkMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    server_message_id: int = betterproto.int64_field(4)
    do_action: bool = betterproto.bool_field(5)
    action_type: int = betterproto.int32_field(6)
    sort_time: int = betterproto.int64_field(7)
    tag: int = betterproto.int64_field(8)


@dataclass
class MarkMessageResponseBody(betterproto.Message):
    server_message_id: int = betterproto.int64_field(1)
    check_code: int = betterproto.int64_field(2)
    check_message: str = betterproto.string_field(3)
    status: int = betterproto.int32_field(4)


@dataclass
class PullMarkMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    cursor: int = betterproto.int64_field(4)
    limit: int = betterproto.int64_field(5)
    asc: bool = betterproto.bool_field(6)
    action_type: int = betterproto.int32_field(7)
    tag: int = betterproto.int64_field(8)
    clear_unread_count: bool = betterproto.bool_field(9)


@dataclass
class PullMarkMessageResponseBody(betterproto.Message):
    messages: List["MessageBody"] = betterproto.message_field(1)
    has_more: bool = betterproto.bool_field(2)
    next_cursor: int = betterproto.int64_field(3)


@dataclass
class BatchUnmarkMessageRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    server_message_ids: List[int] = betterproto.int64_field(4)
    action_type: int = betterproto.int32_field(5)
    tag: int = betterproto.int64_field(6)


@dataclass
class BatchUnmarkMessageResponseBody(betterproto.Message):
    server_message_id: int = betterproto.int64_field(1)
    check_code: int = betterproto.int64_field(2)
    check_message: str = betterproto.string_field(3)
    status: int = betterproto.int32_field(4)


@dataclass
class MarkMsgUnreadCountReportRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    total_unread_count: int = betterproto.int64_field(4)


@dataclass
class MarkMsgUnreadCountReportResponseBody(betterproto.Message):
    set_total_status: bool = betterproto.bool_field(1)
    failed_tag_list: List[int] = betterproto.int64_field(2)


@dataclass
class MarkMsgGetUnreadCountRequestBody(betterproto.Message):
    conversation_id: str = betterproto.string_field(1)
    conversation_type: int = betterproto.int32_field(2)
    conversation_short_id: int = betterproto.int64_field(3)
    get_total: bool = betterproto.bool_field(4)
    tags: List[int] = betterproto.int64_field(5)


@dataclass
class MarkMsgGetUnreadCountResponseBody(betterproto.Message):
    total_count: int = betterproto.int64_field(1)
